---
- name: Delete realm
  community.general.keycloak_realm: "{{ auth_args | combine(call_args) }}"
  vars:
    call_args:
      id: "{{ realm }}"
      realm: "{{ realm }}"
      state: absent

- name: Create realm
  community.general.keycloak_realm: "{{ auth_args | combine(call_args) }}"
  vars:
    call_args:
      id: "{{ realm }}"
      realm: "{{ realm }}"
      state: present

- name: "Client for bug, 626"
  community.general.keycloak_client: "{{ auth_args | combine(call_args) }}"
  vars:
    call_args:
      realm: "{{ realm }}"
      client_id: "client-for-bug-626"
      state: present
      admin_url: "https://www.example.com/admin"
      base_url: "https://www.example.com/"
      standard_flow_enabled: True
      implicit_flow_enabled: True
      direct_access_grants_enabled: True
      public_client: True
      protocol: openid-connect
      description: Log In
      enabled: True
      default_roles:
        - web_user
        - web_admin
      redirect_uris:
        - "*"
      web_origins:
        - "*"
      attributes:
        user.info.response.signature.alg: RS256
        request.object.signature.alg: RS256
      protocol_mappers:
        - name: "client roles"
          protocol: openid-connect
          protocolMapper: 'oidc-usermodel-client-role-mapper'
          config:
            add.to.id.token: True
            add.to.access.token: True
            add.to.userinfo: True
            claim.json.type: JSON
            multivalued: False

- name: Desire client
  community.general.keycloak_client: "{{ auth_args | combine(call_args) }}"
  vars:
    call_args:
      realm: "{{ realm }}"
      client_id: "{{ client_id }}"
      state: present
      redirect_uris: '{{redirect_uris1}}'
      attributes: '{{client_attributes1}}'
      protocol_mappers: '{{protocol_mappers1}}'
  register: desire_client_not_present

- name: Desire client again with same props
  community.general.keycloak_client: "{{ auth_args | combine(call_args) }}"
  vars:
    call_args:
      realm: "{{ realm }}"
      client_id: "{{ client_id }}"
      state: present
      redirect_uris: '{{redirect_uris1}}'
      attributes: '{{client_attributes1}}'
      protocol_mappers: '{{protocol_mappers1}}'
  register: desire_client_when_present_and_same

- name: Check client again with same props
  community.general.keycloak_client: "{{ auth_args | combine(call_args) }}"
  check_mode: yes
  vars:
    call_args:
      realm: "{{ realm }}"
      client_id: "{{ client_id }}"
      state: present
      redirect_uris: '{{redirect_uris1}}'
      attributes: '{{client_attributes1}}'
      protocol_mappers: '{{protocol_mappers1}}'
  register: check_client_when_present_and_same

- name: Assert changes not detected in last two tasks (desire when same, and check)
  assert:
    that:
      - desire_client_when_present_and_same is not changed
      - check_client_when_present_and_same is not changed
